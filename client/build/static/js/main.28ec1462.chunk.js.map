{"version":3,"sources":["components/Logo.jsx","components/Login/index.jsx","websockets/storage.js","state.js","websockets/messages.js","websockets/config.js","hooks.js","websockets/data.js","websockets/process.js","api.js","components/Chat/components/ChatList/components/ChatIcon.jsx","utils.js","components/Chat/components/ChatList/components/AvatarImage.jsx","components/Chat/components/OnlineIndicator.jsx","components/Chat/components/ChatList/components/ChatListItem/index.jsx","components/Chat/components/ChatList/components/Footer.jsx","components/Chat/components/ChatList/index.jsx","components/Chat/components/MessageList/components/InfoMessage.jsx","components/Chat/components/MessageList/components/MessagesLoading.jsx","components/Chat/components/MessageList/components/NoMessages.jsx","components/Chat/components/MessageList/components/ClockIcon.jsx","components/Chat/components/MessageList/components/ReceiverMessage.jsx","components/Chat/components/MessageList/components/SenderMessage.jsx","components/Chat/components/MessageList/index.jsx","components/Chat/components/TypingArea.jsx","components/Chat/index.jsx","components/Navbar.jsx","App.jsx","index.jsx"],"names":["Logo","width","height","xmlns","xmlnsXlink","viewBox","id","d","transform","fill","xlinkHref","y","cx","cy","rx","ry","DEMO_USERS","Login","onLogIn","setShowLogin","useState","Math","floor","random","length","username","setUsername","password","setPassword","error","setError","onSubmit","event","preventDefault","className","style","boxShadow","maxWidth","backgroundColor","paddingLeft","paddingRight","borderTopLeftRadius","borderTopRightRadius","alt","src","process","bottom","left","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","names","htmlFor","value","onChange","target","type","placeholder","required","Toast","minWidth","onClose","show","delay","autohide","Header","Body","UsernameSelect","open","setOpen","setWidth","ref","useRef","clientRectWidth","current","getBoundingClientRect","useEffect","listener","document","addEventListener","removeEventListener","focus","tabIndex","onClick","o","map","name","storage","window","localStorage","storageKeySessionUUID","storageKeyUserUUID","storageKeyUserAccessKey","StorageSet","key","setItem","StorageGet","getItem","reducer","state","action","currentRoom","rooms","users","console","log","payload","user","online","messages","offset","undefined","lastMessage","message","newRooms","forEach","room","UUID","Username","initialState","AppContext","createContext","useAppState","useContext","useAppStateContext","useReducer","data","dispatch","messagesSys","sys","signIn","code","ready","sessionUUID","authorized","userUUID","accessKey","channelJoin","channelMessage","RecipientUUID","webSocketUrl","location","protocol","substr","host","ws","WebSocket","webSocketSend","wsData","JSON","stringify","send","DataChannelJoin","recipientUUID","SUUID","selectedRecipientUUID","processSignIn","Promise","resolve","reject","DataSignIn","then","SSUID","catch","err","processChannelMessage","inputMessage","node","axios","defaults","withCredentials","url","x","ChatIcon","require","stroke","strokeWidth","x1","y1","x2","y2","gradientUnits","stopColor","AvatarImage","useMemo","av","roomId","TOTAL_IMAGES","seed1","seed2","uidParsed","split","pop","roomIdParsed","reverse","theId","getAvatarByUserAndRoomId","objectFit","OnlineIndicator","hide","opacity","useChatListItemHandlers","pseudoUserId","abs","parseInt","isUser","usersFiltered","Object","entries","filter","OnLine","_","userId","ChatListItem","active","LogoutButton","onLogOut","col","noinfo","cursor","UserInfo","Footer","flex","minHeight","ChatList","processedRooms","roomsList","values","main","other","sort","a","b","processChannelJoin","InfoMessage","fontSize","MessagesLoading","role","NoMessages","size","ClockIcon","ReceiverMessage","date","borderRadius","fontWeight","moment","format","SenderMessage","onUserClicked","MessageList","messageListElement","onLoadMoreMessages","Message","CreatedAt","SenderUUID","uuid","Sender","TypingArea","setMessage","e","Chat","onMessageSend","setRoom","scrollToBottom","useCallback","scrollTo","top","scrollHeight","borderBottom","trim","scrollTop","GithubIcon","link","href","title","Navbar","links","setLinks","get","github","App","showLogin","appState","onmessage","parse","Provider","clear","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.28ec1462.chunk.js","sourcesContent":["const Logo = ({ width = 64, height = 64 }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n    >\n      <script />\n      <defs>\n        <path\n          id=\"prefix__a\"\n          d=\"M45.536 38.764c-2.013 1.05-12.44 5.337-14.66 6.494s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276c-1-.478-1.524-.88-1.524-1.26v-3.813s14.447-3.145 16.78-3.982 3.14-.867 5.126-.14 13.853 2.868 15.814 3.587v3.76c0 .377-.452.8-1.477 1.324z\"\n        />\n        <path\n          id=\"prefix__b\"\n          d=\"M45.536 28.733c-2.013 1.05-12.44 5.337-14.66 6.494s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276-2.04-1.613-.077-2.382l15.332-5.935c2.332-.837 3.14-.867 5.126-.14s12.35 4.853 14.312 5.57 2.037 1.31.024 2.36z\"\n        />\n      </defs>\n      <g transform=\"matrix(.84833 0 0 .84833 -7.884 -9.45)\">\n        <use fill=\"#a41e11\" xlinkHref=\"#prefix__a\" />\n        <path\n          d=\"M45.536 34.95c-2.013 1.05-12.44 5.337-14.66 6.494s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276-2.04-1.613-.077-2.382l15.332-5.936c2.332-.836 3.14-.867 5.126-.14S43.55 31.87 45.51 32.6s2.037 1.31.024 2.36z\"\n          fill=\"#d82c20\"\n        />\n        <use fill=\"#a41e11\" xlinkHref=\"#prefix__a\" y={-6.218} />\n        <use fill=\"#d82c20\" xlinkHref=\"#prefix__b\" />\n        <path\n          d=\"M45.536 26.098c-2.013 1.05-12.44 5.337-14.66 6.495s-3.453 1.146-5.207.308-12.85-5.32-14.85-6.276c-1-.478-1.524-.88-1.524-1.26V21.55s14.447-3.145 16.78-3.982 3.14-.867 5.126-.14 13.853 2.868 15.814 3.587v3.76c0 .377-.452.8-1.477 1.324z\"\n          fill=\"#a41e11\"\n        />\n        <use fill=\"#d82c20\" xlinkHref=\"#prefix__b\" y={-6.449} />\n        <g fill=\"#fff\">\n          <path d=\"M29.096 20.712l-1.182-1.965-3.774-.34 2.816-1.016-.845-1.56 2.636 1.03 2.486-.814-.672 1.612 2.534.95-3.268.34zM22.8 24.624l8.74-1.342-2.64 3.872z\" />\n          <ellipse cx={20.444} cy={21.402} rx={4.672} ry={1.811} />\n        </g>\n        <path d=\"M42.132 21.138l-5.17 2.042-.004-4.087z\" fill=\"#7a0c00\" />\n        <path\n          d=\"M36.963 23.18l-.56.22-5.166-2.042 5.723-2.264z\"\n          fill=\"#ad2115\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Logo;\n","// @ts-check\r\nimport { Toast } from \"react-bootstrap\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Logo from \"../Logo\";\r\nimport \"./style.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DEMO_USERS = [\"Pablo\", \"Joe\", \"Mary\", \"Alex\"];\r\n\r\nexport default function Login({ onLogIn,setShowLogin }) {\r\n  const [username, setUsername] = useState(\r\n    () => DEMO_USERS[Math.floor(Math.random() * DEMO_USERS.length)]\r\n  );\r\n  const [password, setPassword] = useState(\"password123\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    onLogIn(username, password, setShowLogin);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-form text-center login-page\">\r\n        <div\r\n          className=\"rounded\"\r\n          style={{\r\n            boxShadow: \"0 0.75rem 1.5rem rgba(18,38,63,.03)\",\r\n          }}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <div\r\n              className=\"row no-gutters align-items-center\"\r\n              style={{\r\n                maxWidth: 400,\r\n                backgroundColor: \"rgba(85, 110, 230, 0.25)\",\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n                borderTopLeftRadius: 4,\r\n                borderTopRightRadius: 4,\r\n              }}\r\n            >\r\n              <div className=\"col text-primary text-left\">\r\n                <h3 className=\"font-size-15\">Welcome Back !</h3>\r\n                <p>Sign in to continue</p>\r\n              </div>\r\n              <div className=\"col align-self-end\">\r\n                <img\r\n                  alt=\"welcome back\"\r\n                  style={{ maxWidth: \"100%\" }}\r\n                  src={`${process.env.PUBLIC_URL}/welcome-back.png`}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"position-absolute\"\r\n              style={{ bottom: -36, left: 20 }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"rgb(239, 242, 247)\",\r\n                  width: 72,\r\n                  height: 72,\r\n                }}\r\n                className=\"rounded-circle d-flex align-items-center justify-content-center\"\r\n              >\r\n                <Logo width={34} height={34} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <form\r\n            className=\"bg-white text-left px-4\"\r\n            style={{\r\n              paddingTop: 58,\r\n              borderBottomLeftRadius: 4,\r\n              borderBottomRightRadius: 4,\r\n            }}\r\n            onSubmit={onSubmit}\r\n          >\r\n            <label className=\"font-size-12\">Name</label>\r\n\r\n            <div className=\"username-select mb-3\">\r\n              <UsernameSelect\r\n                username={username}\r\n                setUsername={setUsername}\r\n                names={DEMO_USERS}\r\n              />\r\n            </div>\r\n\r\n            <label htmlFor=\"inputPassword\" className=\"font-size-12\">\r\n              Password\r\n            </label>\r\n            <input\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n            <div style={{ height: 30 }} />\r\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n              Sign in\r\n            </button>\r\n            <div className=\"login-error-anchor\">\r\n              <div className=\"toast-box\">\r\n                <Toast\r\n                  style={{ minWidth: 277 }}\r\n                  onClose={() => setError(null)}\r\n                  show={error !== null}\r\n                  delay={3000}\r\n                  autohide\r\n                >\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Error</strong>\r\n                  </Toast.Header>\r\n                  <Toast.Body>{error}</Toast.Body>\r\n                </Toast>\r\n              </div>\r\n            </div>\r\n            <div style={{ height: 30 }} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst UsernameSelect = ({ username, setUsername, names = [\"\"] }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const ref = useRef();\r\n  /** @ts-ignore */\r\n  const clientRectWidth = ref.current?.getBoundingClientRect().width;\r\n  useEffect(() => {\r\n    /** @ts-ignore */\r\n    setWidth(clientRectWidth);\r\n  }, [clientRectWidth]);\r\n\r\n  /** Click away listener */\r\n  useEffect(() => {\r\n    if (open) {\r\n      const listener = () => setOpen(false);\r\n      document.addEventListener(\"click\", listener);\r\n      return () => document.removeEventListener(\"click\", listener);\r\n    }\r\n  }, [open]);\r\n\r\n  /** Make the current div focused */\r\n  useEffect(() => {\r\n    if (open) {\r\n      /** @ts-ignore */\r\n      ref.current?.focus();\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div\r\n      tabIndex={0}\r\n      ref={ref}\r\n      className={`username-select-dropdown ${open ? \"open\" : \"\"}`}\r\n      onClick={() => setOpen((o) => !o)}\r\n    >\r\n      <div className=\"username-select-row\">\r\n        <div>{username}</div>\r\n        <div>\r\n          <svg width={24} height={24}>\r\n            <path d=\"M7 10l5 5 5-5z\" fill=\"#333\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{ width: width }}\r\n        className={`username-select-block ${open ? \"open\" : \"\"}`}\r\n      >\r\n        {names.map((name) => (\r\n          <div\r\n            className=\"username-select-block-item\"\r\n            key={name}\r\n            onClick={() => setUsername(name)}\r\n          >\r\n            {name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/*\n*\n* Data storage for store data (session uuid, user uuid, access key, etc.) and reuse it, as example: localStorage\n*\n* */\nconst storage = window.localStorage;\n\nexport const storageKeySessionUUID = \"session.uuid\";\n\nexport const storageKeyUserUUID = \"user.uuid\";\nexport const storageKeyUserAccessKey = \"user.accessKey\";\n\nexport function StorageSet(key, value) {\n    storage.setItem(key, value);\n}\n\nexport function StorageGet(key) {\n    const value =  storage.getItem(key);\n    return value == null?\"\":value;\n}\n","// @ts-check\r\nimport { createContext, useContext, useReducer } from \"react\";\r\n\r\n/**\r\n * @typedef {{\r\n *  from: string\r\n *  date: number\r\n *  message: string\r\n *  roomId?: string\r\n * }} Message\r\n *\r\n * @typedef {{\r\n *   name: string;\r\n *   id: string;\r\n *   messages?: Message[]\r\n *   connected?: boolean;\r\n *   offset?: number;\r\n *   forUserId?: null | number | string\r\n *   lastMessage?: Message | null\r\n * }} Room\r\n *\r\n * @typedef {{\r\n *   username: string;\r\n *   id: string;\r\n *   online?: boolean;\r\n *   room?: string;\r\n * }} UserEntry\r\n *\r\n * @typedef {{\r\n *  currentRoom: string;\r\n *  rooms: {[id: string]: Room};\r\n *  users: {[id: string]: UserEntry}\r\n * }} State\r\n *\r\n * @param {State} state\r\n * @param {{type: string; payload: any}} action\r\n * @returns {State}\r\n */\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"clear\":\r\n      return { currentRoom: \"0\", rooms: {}, users: {} };\r\n    case \"set user\": {\r\n      console.log('set user', action.payload)\r\n      return {...state, user: action.payload};\r\n    }\r\n    case \"set users\": {\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    }\r\n    case \"make user online\": {\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [action.payload]: { ...state.users[action.payload], online: true },\r\n        },\r\n      };\r\n    }\r\n    case \"append users\": {\r\n      return { ...state, users: { ...state.users, ...action.payload } };\r\n    }\r\n    case \"set messages\": {\r\n      return {\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [state.currentRoom]: {\r\n            ...state.rooms[state.currentRoom],\r\n            messages: action.payload,\r\n            offset: action.payload.length,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case \"prepend messages\": {\r\n      const messages = [\r\n        ...action.payload.messages,\r\n        ...state.rooms[action.payload.id].messages,\r\n      ];\r\n      return {\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [action.payload.id]: {\r\n            ...state.rooms[action.payload.id],\r\n            messages,\r\n            offset: messages.length,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case \"append message\":\r\n      if (state.rooms[action.payload.id] === undefined) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        rooms: {\r\n          ...state.rooms,\r\n          [action.payload.id]: {\r\n            ...state.rooms[action.payload.id],\r\n            lastMessage: action.payload.message,\r\n            messages: state.rooms[action.payload.id].messages\r\n              ? [\r\n                ...state.rooms[action.payload.id].messages,\r\n                action.payload.message,\r\n              ]\r\n              : undefined,\r\n          },\r\n        },\r\n      };\r\n    case 'set last message':\r\n      return { ...state, rooms: { ...state.rooms, [action.payload.id]: { ...state.rooms[action.payload.id], lastMessage: action.payload.lastMessage } } };\r\n    case \"set current room\":\r\n      return { ...state, currentRoom: action.payload };\r\n    case \"add room\":\r\n      return {\r\n        ...state,\r\n        rooms: { ...state.rooms, [action.payload.id]: action.payload },\r\n      };\r\n    // case \"set rooms\": {\r\n    //   /** @type {Room[]} */\r\n    //   const newRooms = action.payload;\r\n    //   const rooms = { ...state.rooms };\r\n    //   newRooms.forEach((room) => {\r\n    //     rooms[room.id] = {\r\n    //       ...room,\r\n    //       messages: rooms[room.id] && rooms[room.id].messages,\r\n    //     };\r\n    //   });\r\n    //   return { ...state, rooms };\r\n    // }\r\n    // temporary, while no rooms\r\n      case \"set rooms\": {\r\n        /** @type {Room[]} */\r\n        const newRooms = action.payload;\r\n        const rooms = { ...state.rooms };\r\n        newRooms.forEach((room) => {\r\n          rooms[room.UUID] = {\r\n            ...room,\r\n            id: room.UUID,\r\n            name: room.Username,\r\n            messages: rooms[room.id] && rooms[room.id].messages,\r\n          };\r\n        });\r\n        return { ...state, rooms };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/** @type {State} */\r\nconst initialState = {\r\n  currentRoom: \"\",\r\n  rooms: {\"\": {id: \"\", name: \"General\"}},\r\n  users: {},\r\n  user: {}\r\n};\r\n\r\nconst useAppStateContext = () => {\r\n  return useReducer(reducer, initialState);\r\n};\r\n\r\n// @ts-ignore\r\nexport const AppContext = createContext();\r\n\r\n/**\r\n * @returns {[\r\n *  State,\r\n *  React.Dispatch<{\r\n *   type: string;\r\n *   payload: any;\r\n * }>\r\n * ]}\r\n */\r\nexport const useAppState = () => {\r\n  const [state, dispatch] = useContext(AppContext);\r\n  return [state, dispatch];\r\n};\r\n\r\nexport default useAppStateContext;\r\n","/*\n* Websocket onmessage event handlers\n*\n* ws.onmessage event has one argument `event`,\n* we should read `event.data` value, it contained message from backend\n*\n* `event.data` is stringify JSON object, each of received JSON object contained `type:\"<Message Type>\"` property\n*\n* `messages` - is a key:value map, where:\n*   - key: received message type from websocket, message type contained in `event.data.type`\n*   - value: handler function for processing received message\n* */\n\nimport {storageKeySessionUUID, storageKeyUserAccessKey, storageKeyUserUUID, StorageSet} from \"./storage\";\nimport {viewMessagesAdd, viewShowPageChat, viewUsersAdd, viewUsersClean} from \"./view\";\nimport useAppStateContext from '../state';\n\nexport const messages = {\n    // system message from backend, usually it contained system info for debug\n    \"sys\": sys,\n    // error from backend when backend received message and can't processed it\n    \"error\": error,\n    // backend return session UUID when websocket connection successful\n    \"ready\": ready,\n    // backend return user data on signIn successful\n    \"authorized\": authorized,\n    // backend return all users\n    \"users\": users,\n    // backend said that somebody joined to channel\n    \"channelJoin\": channelJoin,\n    // backend said that channel accepted new message\n    \"channelMessage\": channelMessage\n}\n\nconst messagesSys = {\n    \"signIn\": sysSignIn(),\n}\n\nfunction sys(data, {dispatch}) {\n    if(typeof messagesSys[data.sys.type] == \"function\") {\n        messagesSys[data.sys.type](data.sys);\n    } else {\n        console.log(\"Unknown message sys.type: \" + data.sys.type)\n    }\n    if (data.sys.signIn)\n        dispatch({type: 'set user', payload: data.sys.signIn});\n}\n\nfunction error(data) {\n    console.log(\"error: \" + data.error.code + \" - \" + data.error.message, data)\n}\n\nfunction ready(data) {\n    StorageSet(storageKeySessionUUID, data.ready.sessionUUID);\n}\n\nfunction authorized(data) {\n    StorageSet(storageKeyUserUUID,data.authorized.userUUID);\n    StorageSet(storageKeyUserAccessKey, data.authorized.accessKey);\n}\n\n\nfunction users(data, {dispatch}) {\n    dispatch({type: 'set users', payload: data.users.users})\n    dispatch({type: 'set rooms', payload: data.users.users})\n}\n\nfunction channelJoin(data, {dispatch}) {\n    dispatch({type: 'set messages', payload: data.channelJoin.messages || []});\n    dispatch({type: 'set users', payload: data.channelJoin.users});\n}\n\nfunction channelMessage(data, {dispatch}) {\n    console.log('append message', data);\n    dispatch({type: 'append message', payload: {id: data.channelMessage.RecipientUUID, message: data.channelMessage}});\n}\n\nfunction sysSignIn(data){\n    console.log('sysSignIn')\n}\n","export const webSocketUrl = \"ws\"+(window.location.protocol.substr(0,5)===\"https\"?\"s\":\"\")+\"://\"+window.location.host+\"/ws\";\r\n","// @ts-check\nimport {messages} from \"./websockets/messages\";\nimport {webSocketUrl} from './websockets/config';\n\nconst ws = new WebSocket(webSocketUrl);\n\nexport function initWebSocket(appState) {\n  ws.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    console.log('EVENT', data.type, data);\n    if(typeof messages[data.type] == \"function\") {\n      messages[data.type](data, appState);\n    } else {\n      console.log(\"Unknown message type: \" + data.type);\n    }\n  }\n}\n\n/**\n * main method for send message to websocket server\n * @param {Object} message\n */\nexport function webSocketSend(message) {\n  const wsData = JSON.stringify(message);\n  ws.send(wsData);\n}\n\n","/*\n* Will return data object for websocket send to backend\n*\n*   function Data<MessageType>([argument, ...]) {\n*       return {\n*           <Property>: <Value>,\n*           ...\n*       }\n*   }\n*\n* */\n\nimport {StorageGet, storageKeySessionUUID, storageKeyUserAccessKey, storageKeyUserUUID} from \"./storage\";\n\nconst dataTypeSignIn = \"signIn\";\nconst dataTypeSignOut = \"signOut\";\nconst dataTypeUsers = \"users\";\nconst dataTypeChannelJoin = \"channelJoin\";\nconst dataTypeChannelMessage = \"channelMessage\";\nconst dataTypeChannelLeave = \"channelLeave\";\n\nexport function DataSignIn(username, password) {\n    return {\n        SUUID: StorageGet(storageKeySessionUUID),\n        type: dataTypeSignIn,\n        signIn: {\n            username: username,\n            password: password\n        }\n    }\n}\n\nexport function DataUsers() {\n    return {\n        SSUID: StorageGet(storageKeySessionUUID),\n        type: dataTypeUsers,\n        userUUID: StorageGet(storageKeyUserUUID),\n        accessKey: StorageGet(storageKeyUserAccessKey),\n    }\n}\n\nexport function DataChannelJoin(recipientUUID) {\n    return {\n        SUUID: StorageGet(storageKeySessionUUID),\n        type: dataTypeChannelJoin,\n        userUUID: StorageGet(storageKeyUserUUID),\n        accessKey: StorageGet(storageKeyUserAccessKey),\n        channelJoin: {\n            recipientUUID: recipientUUID\n        }\n    }\n}\n\nexport function DataChannelLeave(recipientUUID) {\n    return {\n        SUUID: StorageGet(storageKeySessionUUID),\n        type: dataTypeChannelLeave,\n        userUUID: StorageGet(storageKeyUserUUID),\n        userAccessKey: StorageGet(storageKeyUserAccessKey),\n        channelLeave: {\n            recipientUUID: recipientUUID,\n            senderUUID: StorageGet(storageKeyUserUUID)\n        }\n    }\n}\n\nexport function DataChannelMessage(recipientUUID, message) {\n    return {\n        SUUID: StorageGet(storageKeySessionUUID),\n        type: dataTypeChannelMessage,\n        userUUID: StorageGet(storageKeyUserUUID),\n        accessKey: StorageGet(storageKeyUserAccessKey),\n        channelMessage: {\n            recipientUUID: recipientUUID,\n            message: message\n        }\n    }\n}\n","/*\n*   Basic processing examples\n*\n*   You can compare websocket messages sending or receiving together in\n*   specific functions for make custom processing flow\n*\n* */\n\nimport {webSocketSend} from \"../hooks\";\nimport {DataChannelJoin, DataChannelLeave, DataChannelMessage, DataSignIn, DataUsers} from \"./data\";\nimport {node} from \"prop-types\";\n\nlet inputSignInUsername = null;\nlet inputSignInPassword = null;\nlet inputMessage = null;\n\nconst nodeIdInputSignInUsername = \"input-username\";\nconst nodeIdInputSignInPassword = \"input-password\";\nconst nodeIdInputMessage = \"input-message\";\n\nlet selectedRecipientUUID = \"\";\n\n// signIn flow\nexport function processSignIn(username,password,setShowLogin) {\n    let process = new Promise((resolve, reject) => {\n        webSocketSend(DataSignIn(username, password));\n        resolve();\n    })\n\n    process.then(() => {webSocketSend(DataUsers())});\n    process.then(() => {webSocketSend(DataChannelJoin(\"\"));});\n    process.catch((err) => {console.log(err)});\n\n    setShowLogin(false)\n    return ;\n}\n\nexport function processChannelJoin(recipientUUID) {\n    let process = new Promise((resolve, reject) => {\n        webSocketSend(DataChannelJoin(recipientUUID));\n        resolve();\n    });\n    process.then(() => {selectedRecipientUUID = recipientUUID;})\n    process.catch((err) => console.log(err));\n}\n\nexport function processChannelLeave() {\n    let process = new Promise((resolve, reject) => {\n        webSocketSend(DataChannelLeave(selectedRecipientUUID));\n        resolve();\n    });\n    process.catch((err) => console.log('error', err));\n}\n\nexport function processChannelMessage(inputMessage) {\n    if(inputMessage == null) {\n        inputMessage = node(nodeIdInputMessage);\n    }\n    console.log('channelMessage', inputMessage)\n    let process = new Promise((resolve, reject) => webSocketSend(DataChannelMessage(selectedRecipientUUID, inputMessage)));\n    process.then(() => {});\n    process.catch((err) => console.log(err));\n    return false;\n}\n","import axios from 'axios';\r\nimport {processSignIn} from \"./websockets/process\";\r\naxios.defaults.withCredentials = true;\r\n\r\nconst BASE_URL = '';\r\n\r\nexport const MESSAGES_TO_LOAD = 15;\r\n\r\nconst url = x => `${BASE_URL}${x}`;\r\n\r\n/** Checks if there's an existing session. */\r\nexport const getMe = () => {\r\n  return axios.get(url('/me'))\r\n    .then(x => x.data)\r\n    .catch(_ => null);\r\n};\r\n\r\n/** Handle user log in */\r\nexport const login = (username, password) => {\r\n  processSignIn(username,password);\r\n};\r\n\r\nexport const logOut = () => {\r\n  return axios.post(url('/logout'));\r\n};\r\n\r\n/**\r\n * Function for checking which deployment urls exist.\r\n *\r\n * @returns {Promise<{\r\n *   heroku?: string;\r\n *   google_cloud?: string;\r\n *   vercel?: string;\r\n *   github?: string;\r\n * }>}\r\n */\r\nexport const getButtonLinks = () => {\r\n  return axios.get(url('/links'))\r\n    .then(x => x.data)\r\n    .catch(_ => null);\r\n};\r\n\r\n/** This was used to get a random login name (for demo purposes). */\r\nexport const getRandomName = () => {\r\n  return axios.get(url('/randomname')).then(x => x.data);\r\n};\r\n\r\n/**\r\n * Load messages\r\n *\r\n * @param {string} id room id\r\n * @param {number} offset\r\n * @param {number} size\r\n */\r\nexport const getMessages = (id,\r\n  offset = 0,\r\n  size = MESSAGES_TO_LOAD\r\n) => {\r\n  return axios.get(url(`/room/${id}/messages`), {\r\n    params: {\r\n      offset,\r\n      size\r\n    }\r\n  })\r\n    .then(x => x.data.reverse());\r\n};\r\n\r\n/**\r\n * @returns {Promise<{ name: string, id: string, messages: Array<import('./state').Message> }>}\r\n */\r\nexport const getPreloadedRoom = async () => {\r\n  return axios.get(url(`/room/0/preload`)).then(x => x.data);\r\n};\r\n\r\n/**\r\n * Fetch users by requested ids\r\n * @param {Array<number | string>} ids\r\n */\r\nexport const getUsers = (ids) => {\r\n  return axios.get(url(`/users`), { params: { ids } }).then(x => x.data);\r\n};\r\n\r\n/** Fetch users which are online */\r\nexport const getOnlineUsers = () => {\r\n  return axios.get(url(`/users/online`)).then(x => x.data);\r\n};\r\n\r\n/** This one is called on a private messages room created. */\r\nexport const addRoom = async (user1, user2) => {\r\n  return axios.post(url(`/room`), { user1, user2 }).then(x => x.data);\r\n};\r\n\r\n/**\r\n * @returns {Promise<Array<{ names: string[]; id: string }>>}\r\n */\r\nexport const getRooms = async (userId) => {\r\n  return axios.get(url(`/rooms/${userId}`)).then(x => x.data);\r\n};\r\n","const ChatIcon = () => (\n  <svg\n    width=\"32\"\n    height=\"32\"\n    viewBox=\"0 0 1651 1651\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <rect width=\"1651\" height=\"1651\" rx=\"14\" fill=\"white\" />\n    <path\n      d=\"M495.286 1098.96L497.967 1070.86L478.04 1050.88C408.572 981.233 368 891.771 368 795.344C368 585.371 565.306 402 826 402C1086.69 402 1284 585.371 1284 795.344C1284 1005.32 1086.69 1188.69 826 1188.69V1248.69L825.913 1188.69C779.837 1188.75 733.952 1182.77 689.432 1170.9L667.26 1164.98L646.8 1175.37C620.731 1188.61 562.74 1213.98 467.32 1235.35C480.554 1191.83 490.95 1144.39 495.286 1098.96Z\"\n      stroke=\"url(#paint0_linear)\"\n      strokeWidth=\"120\"\n    />\n    <defs>\n      <linearGradient\n        id=\"paint0_linear\"\n        x1=\"662.312\"\n        y1=\"397.956\"\n        x2=\"416.164\"\n        y2=\"1678.7\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#7514FB\" />\n        <stop offset=\"0.624243\" stopColor=\"#F26D41\" />\n        <stop offset=\"1\" stopColor=\"#F43B4B\" />\n      </linearGradient>\n    </defs>\n  </svg>\n);\n\nexport default ChatIcon;\n","// @ts-check\r\n\r\nimport { getUsers } from \"./api\";\r\n\r\n/**\r\n * @param {string[]} names\r\n * @param {string} username\r\n */\r\nexport const parseRoomName = (names, username) => {\r\n  for (let name of names) {\r\n    if (typeof name !== 'string') {\r\n      name = name[0];\r\n    }\r\n    if (name !== username) {\r\n      return name;\r\n    }\r\n  }\r\n  return names[0];\r\n};\r\n\r\n/** Get an avatar for a room or a user */\r\nexport const getAvatarByUserAndRoomId = (roomId = \"1\") => {\r\n  const TOTAL_IMAGES = 13;\r\n  const seed1 = 654;\r\n  const seed2 = 531;\r\n\r\n  const uidParsed = +roomId.split(\":\").pop();\r\n  let roomIdParsed = +roomId.split(\":\").reverse().pop();\r\n  if (roomIdParsed < 0) {\r\n    roomIdParsed += 3555;\r\n  }\r\n\r\n  const theId = (uidParsed * seed1 + roomIdParsed * seed2) % TOTAL_IMAGES;\r\n\r\n  return `${process.env.PUBLIC_URL}/avatars/${theId}.jpg`;\r\n};\r\n\r\nconst jdenticon = require(\"jdenticon\");\r\n\r\nconst avatars = {};\r\nexport const getAvatar = (username) => {\r\n  let av = avatars[username];\r\n  if (av === undefined) {\r\n    av =\r\n      \"data:image/svg+xml;base64,\" + window.btoa(jdenticon.toSvg(username, 50));\r\n    avatars[username] = av;\r\n  }\r\n  return av;\r\n};\r\n\r\nexport const populateUsersFromLoadedMessages = async (users, dispatch, messages) => {\r\n  const userIds = {};\r\n  messages.forEach((message) => {\r\n    userIds[message.from] = 1;\r\n  });\r\n\r\n  const ids = Object.keys(userIds).filter(\r\n    (id) => users[id] === undefined\r\n  );\r\n\r\n  if (ids.length !== 0) {\r\n    /** We need to fetch users first */\r\n    const newUsers = await getUsers(ids);\r\n    dispatch({\r\n      type: \"append users\",\r\n      payload: newUsers,\r\n    });\r\n  }\r\n\r\n};","// @ts-check\nimport React, { useMemo } from \"react\";\nimport { getAvatarByUserAndRoomId } from \"../../../../../utils\";\nimport ChatIcon from \"./ChatIcon\";\n\nconst AvatarImage = ({ name, id }) => {\n  const url = useMemo(() => {\n    const av = getAvatarByUserAndRoomId(\"\" + id);\n    if (name === \"Mary\") {\n      return `${process.env.PUBLIC_URL}/avatars/0.jpg`;\n    } else if (name === \"Pablo\") {\n      return `${process.env.PUBLIC_URL}/avatars/2.jpg`;\n    } else if (name === \"Joe\") {\n      return `${process.env.PUBLIC_URL}/avatars/9.jpg`;\n    } else if (name === \"Alex\") {\n      return `${process.env.PUBLIC_URL}/avatars/8.jpg`;\n    }\n    return av;\n  }, [id, name]);\n\n  return (\n    <>\n      {name !== \"General\" ? (\n        <img\n          src={url}\n          alt={name}\n          style={{ width: 32, height: 32, objectFit: \"cover\" }}\n          className=\"rounded-circle avatar-xs\"\n        />\n      ) : (\n        <div className=\"overflow-hidden rounded-circle\">\n          <ChatIcon />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AvatarImage;\n","const OnlineIndicator = ({ online, hide = false, width = 8, height = 8 }) => {\n  return (\n    <div\n      className={\n        online ? \"rounded-circle bg-success\" : \"rounded-circle bg-gray\"\n      }\n      style={{ width, height, opacity: hide ? 0 : 1 }}\n    ></div>\n  );\n};\n\nexport default OnlineIndicator;\n","// @ts-check\nimport \"./style.css\";\nimport React, { useMemo } from \"react\";\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\nimport { getMessages } from \"../../../../../../api\";\nimport AvatarImage from \"../AvatarImage\";\nimport OnlineIndicator from \"../../../OnlineIndicator\";\nimport useAppStateContext, {useAppState} from '../../../../../../state';\n\n/**\n * @param {{ active: boolean; room: import('../../../../../../state').Room; onClick: () => void; }} props\n */\nconst ChatListItem = ({ room, active = false, onClick }) => {\n  const { online, name, userId } = useChatListItemHandlers(room);\n  return (\n    <div\n      onClick={onClick}\n      className={`chat-list-item d-flex align-items-start rounded ${\n        active ? \"bg-white\" : \"\"\n      }`}\n    >\n      <div className=\"align-self-center mr-3\">\n        <OnlineIndicator online={online} hide={room.id === \"0\"} />\n      </div>\n      <div className=\"align-self-center mr-3\">\n        <AvatarImage name={name} id={userId} />\n      </div>\n      <div className=\"media-body overflow-hidden\">\n        <h5 className=\"text-truncate font-size-14 mb-1\">{name}</h5>\n      </div>\n    </div>\n  );\n};\n\nconst useChatListItemHandlers = (\n  /** @type {import(\"../../../../../../state\").Room} */ room\n) => {\n  const { id, name } = room;\n  const [state] = useAppState();\n  /** Here we want to associate the room with a user by its name (since it's unique). */\n  const [isUser, online, userId] = useMemo(() => {\n    try {\n      let pseudoUserId = Math.abs(parseInt(id.split(\":\").reverse().pop()));\n      const isUser = pseudoUserId > 0;\n      const usersFiltered = Object.entries(state.users)\n        .filter(([, user]) => user.Username === name)\n        .map(([, user]) => user);\n      let online = false;\n      if (usersFiltered.length > 0) {\n        online = usersFiltered[0].OnLine;\n        pseudoUserId = +usersFiltered[0].id;\n      }\n      return [isUser, online, pseudoUserId];\n    } catch (_) {\n      return [false, false, \"0\"];\n    }\n  }, [id, name, state.users]);\n\n  return {\n    isUser,\n    online,\n    userId,\n    name: room.name,\n  };\n};\n\nexport default ChatListItem;\n","// @ts-check\n\nimport React from \"react\";\nimport { Power } from \"react-bootstrap-icons\";\nimport OnlineIndicator from \"../../OnlineIndicator\";\nimport AvatarImage from \"./AvatarImage\";\n\nconst Footer = ({ user, onLogOut }) => (\n  <div\n    className=\"row no-gutters align-items-center pl-4 pr-2 pb-3\"\n    style={{ height: \"inherit\", flex: 0, minHeight: 50 }}\n  >\n    {(\n        <>\n          <UserInfo user={user} col={8}/>\n          <LogoutButton onLogOut={onLogOut} col={4}/>\n        </>\n    )}\n  </div>\n);\n\nconst LogoutButton = ({ onLogOut, col = 5, noinfo = false }) => (\n  <div\n    onClick={()=>onLogOut()}\n    style={{ cursor: \"pointer\" }}\n    className={`col-${col} text-danger ${!noinfo ? \"text-right\" : \"\"}`}\n  >\n    <Power /> Log out\n  </div>\n);\n\nconst UserInfo = ({ user = {}, col = 7, noinfo = false }) => (\n  <div\n    className={`col-${col} d-flex align-items-center ${\n      noinfo ? \"justify-content-end\" : \"\"\n    }`}\n  >\n    <div className={`align-self-center ${noinfo ? \"\" : \"mr-3\"}`}>\n      <AvatarImage name={user.username} id={user.id} />\n    </div>\n    {!noinfo && (\n      <div className=\"media-body\">\n        <h5 className=\"font-size-14 mt-0 mb-1\">{user.username}</h5>\n        <div className=\"d-flex align-items-center\">\n          <OnlineIndicator online={true} />\n          <p className=\"ml-2 text-muted mb-0\">Active</p>\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nexport default Footer;\n","// @ts-check\nimport React, { useMemo } from \"react\";\nimport ChatListItem from \"./components/ChatListItem\";\nimport Footer from \"./components/Footer\";\nimport {useAppState} from '../../../../state';\nimport {processChannelJoin, processChannelLeave} from '../../../../websockets/process';\n\nconst ChatList = ({ rooms, user, currentRoom, onLogOut }) => {\n  const [state, dispatch] = useAppState();\n\n  const processedRooms = useMemo(() => {\n    const roomsList = Object.values(rooms);\n    const main = roomsList.filter((x) => x.id === \"0\");\n    let other = roomsList.filter((x) => x.id !== \"0\");\n    other = other.sort(\n      (a, b) => +a.id.split(\":\").pop() - +b.id.split(\":\").pop()\n    );\n    return [...(main ? main : []), ...other];\n  }, [rooms]);\n\n  return (\n    <>\n      <div className=\"chat-list-container flex-column d-flex pr-4\">\n        <div className=\"py-2\">\n          <p className=\"h5 mb-0 py-1 chats-title\">Chats</p>\n        </div>\n        <div className=\"messages-box flex flex-1\">\n          <div className=\"list-group rounded-0\">\n            {processedRooms.map((room) => (\n              <ChatListItem\n                key={room.id}\n                onClick={() => {\n                  dispatch({type: \"set current room\", payload: room.id});\n                  // processChannelLeave();\n                  processChannelJoin(room.id);\n                }}\n                active={currentRoom === room.id}\n                room={room}\n              />\n            ))}\n          </div>\n        </div>\n        <Footer user={user} onLogOut={onLogOut} />\n      </div>\n    </>\n  );\n};\n\nexport default ChatList;\n","// @ts-check\nconst InfoMessage = ({ message }) => {\n  return (\n    <p\n      className=\"mb-2 fs-6 fw-light fst-italic text-black-50 text-center\"\n      style={{ opacity: 0.8, fontSize: 14 }}\n    >\n      {message}\n    </p>\n  );\n};\n\nexport default InfoMessage;\n","// @ts-check\nimport React from \"react\";\n\nconst MessagesLoading = () => {\n  return (\n    <div className=\"no-messages flex-column d-flex flex-row justify-content-center align-items-center text-muted text-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MessagesLoading;\n","// @ts-check\nimport React from \"react\";\nimport { CardText } from \"react-bootstrap-icons\";\n\nconst NoMessages = () => {\n  return (\n    <div className=\"no-messages flex-column d-flex flex-row justify-content-center align-items-center text-muted text-center\">\n      <CardText size={96} />\n      <p>No messages</p>\n    </div>\n  );\n};\n\nexport default NoMessages;\n","const ClockIcon = () => (\n  <svg\n    width={12}\n    height={12}\n    className=\"prefix__MuiSvgIcon-root prefix__jss80 prefix__MuiSvgIcon-fontSizeLarge\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n  >\n    <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n    <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\n  </svg>\n);\n\nexport default ClockIcon;\n","// @ts-check\nimport moment from \"moment\";\nimport React from \"react\";\nimport ClockIcon from \"./ClockIcon\";\n\nconst ReceiverMessage = ({\n  username = \"user\",\n  message = \"Lorem ipsum dolor...\",\n  date,\n}) => (\n  <div className=\"d-flex\">\n    <div style={{ flex: 1 }} />\n    <div style={{ width: \"50%\" }} className=\"text-right mb-4\">\n      <div\n        className=\"conversation-list d-inline-block bg-light px-3 py-2\"\n        style={{ borderRadius: 12 }}\n      >\n        <div className=\"ctext-wrap\">\n          <div\n            className=\"conversation-name text-left text-primary mb-1\"\n            style={{\n              fontWeight: 600,\n            }}\n          >\n            {username}\n          </div>\n          <p className=\"text-left\">{message}</p>\n          <p className=\"chat-time mb-0\">\n            <ClockIcon /> {moment(date).format(\"LT\")}{\" \"}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\nexport default ReceiverMessage;\n","// @ts-check\nimport moment from \"moment\";\nimport React from \"react\";\nimport ClockIcon from \"./ClockIcon\";\nimport OnlineIndicator from \"../../OnlineIndicator\";\n\nconst SenderMessage = ({\n  user,\n  message = \"Lorem ipsum dolor...\",\n  date,\n  onUserClicked,\n}) => (\n  <div className=\"d-flex\">\n    <div style={{ width: \"50%\" }} className=\"text-left mb-4\">\n      <div\n        className=\"conversation-list d-inline-block px-3 py-2\"\n        style={{ borderRadius: 12, backgroundColor: \"rgba(85, 110, 230, 0.1)\" }}\n      >\n        <div className=\"ctext-wrap\">\n          {user && (\n            <div className=\"conversation-name text-primary d-flex align-items-center mb-1\">\n              <div\n                className=\"mr-2\"\n                style={{\n                  fontWeight: 600,\n                  cursor: \"pointer\",\n                }}\n                onClick={onUserClicked}\n              >\n                {user.Username}\n              </div>\n              <OnlineIndicator width={7} height={7} online={user.OnLine} />\n            </div>\n          )}\n          <p className=\"text-left\">{message}</p>\n          <p className=\"chat-time mb-0\">\n            <ClockIcon /> {moment(date).format(\"LT\")}{\" \"}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div style={{ flex: 1 }} />\n  </div>\n);\n\nexport default SenderMessage;\n","// @ts-check\nimport React from \"react\";\nimport {login, MESSAGES_TO_LOAD} from \"../../../../api\";\nimport InfoMessage from \"./components/InfoMessage\";\nimport MessagesLoading from \"./components/MessagesLoading\";\nimport NoMessages from \"./components/NoMessages\";\nimport ReceiverMessage from \"./components/ReceiverMessage\";\nimport SenderMessage from \"./components/SenderMessage\";\n\nconst MessageList = ({\n  messageListElement,\n  messages,\n  room,\n  onLoadMoreMessages,\n  user = {},\n  onUserClicked,\n}) => {\n  return (\n  <div\n    ref={messageListElement}\n    className=\"chat-box-wrapper position-relative d-flex\"\n  >\n    {messages === undefined ? (\n      <MessagesLoading />\n    ) : messages.length === 0 ? (\n      <NoMessages />\n    ) : (\n      <></>\n    )}\n    <div className=\"px-4 pt-5 chat-box position-absolute\">\n      {messages && messages.length !== 0 && (\n        <>\n          {room.offset && room.offset >= MESSAGES_TO_LOAD ? (\n            <div className=\"d-flex flex-row align-items-center mb-4\">\n              <div\n                style={{ height: 1, backgroundColor: \"#eee\", flex: 1 }}\n              ></div>\n              <div className=\"mx-3\">\n                <button\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"true\"\n                  type=\"button\"\n                  onClick={onLoadMoreMessages}\n                  className=\"btn rounded-button btn-secondary nav-btn\"\n                  id=\"__BVID__168__BV_toggle_\"\n                >\n                  Load more\n                </button>\n              </div>\n              <div\n                style={{ height: 1, backgroundColor: \"#eee\", flex: 1 }}\n              ></div>\n            </div>\n          ) : (\n            <></>\n          )}\n          {messages.map((message, x) => {\n            const key = message.Message + message.CreatedAt + message.SenderUUID + x;\n            if (message.SenderUUID === \"info\") {\n              return <InfoMessage key={key} message={message.Message} />;\n            }\n            if (message.SenderUUID !== user.uuid) {\n              return (\n                <SenderMessage\n                  onUserClicked={() => onUserClicked(message.SenderUUID)}\n                  key={key}\n                  message={message.Message}\n                  date={message.CreatedAt}\n                  user={message.Sender}\n                />\n              );\n            }\n            return (\n              <ReceiverMessage\n                username={\n                  message.Sender ?  message.Sender.Username : \"\"\n                }\n                key={key}\n                message={message.Message}\n                date={message.CreatedAt}\n              />\n            );\n          })}\n        </>\n      )}\n    </div>\n  </div>\n)};\nexport default MessageList;\n","// @ts-check\nconst TypingArea = ({ message, setMessage, onSubmit }) => (\n  <div className=\"p-3 chat-input-section\">\n    <form className=\"row\" onSubmit={onSubmit}>\n      <div className=\"col\">\n        <div className=\"position-relative\">\n          <input\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            type=\"text\"\n            placeholder=\"Enter Message...\"\n            className=\"form-control chat-input\"\n          />\n          {/**/}\n        </div>\n      </div>\n      <div className=\"col-auto\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-rounded chat-send w-md\"\n        >\n          <span className=\"d-none d-sm-inline-block mr-2\">Send</span>\n          <svg width={13} height={13} viewBox=\"0 0 24 24\" tabIndex={-1}>\n            <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" fill=\"white\" />\n          </svg>\n        </button>\n      </div>\n    </form>\n  </div>\n);\n\nexport default TypingArea;\n","// @ts-check\r\nimport React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport ChatList from \"./components/ChatList\";\r\nimport MessageList from \"./components/MessageList\";\r\nimport TypingArea from \"./components/TypingArea\";\r\nimport useAppStateContext, {useAppState} from '../../state';\r\n\r\n/**\r\n * @param {{\r\n *  onLogOut: () => void,\r\n *  onMessageSend: (message: string, roomId: string) => void,\r\n *  user: import(\"../../state\").UserEntry\r\n * }} props\r\n */\r\nexport default function Chat({ onLogOut, user, onMessageSend, users }) {\r\n  const [{rooms, currentRoom}] = useAppState();\r\n\r\n  const [room, setRoom] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const messageListElement = useRef(null);\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (messageListElement.current) {\r\n      messageListElement.current.scrollTo({\r\n        top: messageListElement.current.scrollHeight,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [rooms[currentRoom].messages, scrollToBottom]);\r\n\r\n  useEffect(() => {\r\n    setRoom(rooms[currentRoom]);\r\n  }, [currentRoom])\r\n\r\n  return (\r\n    <div className=\"container py-5 px-4\">\r\n      <div className=\"chat-body row overflow-hidden shadow bg-light rounded\">\r\n        <div className=\"col-4 px-0\">\r\n          <ChatList\r\n            user={user}\r\n            onLogOut={onLogOut}\r\n            rooms={rooms}\r\n            currentRoom={currentRoom}\r\n          />\r\n        </div>\r\n        {/* Chat Box*/}\r\n        <div className=\"col-8 px-0 flex-column bg-white rounded-lg\">\r\n          <div className=\"px-4 py-4\" style={{ borderBottom: \"1px solid #eee\" }}>\r\n            <h2 className=\"font-size-15 mb-0\">\r\n              {room ? room.name : \"Room\"}\r\n              {\" Room\"}\r\n            </h2>\r\n          </div>\r\n          <MessageList\r\n            messageListElement={messageListElement}\r\n            messages={rooms[currentRoom].messages}\r\n            room={rooms[currentRoom]}\r\n            // onLoadMoreMessages={onLoadMoreMessages}\r\n            user={user}\r\n            // onUserClicked={onUserClicked}\r\n          />\r\n\r\n          {/* Typing area */}\r\n          <TypingArea\r\n            message={message}\r\n            setMessage={setMessage}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              if (message) {\r\n                onMessageSend(message.trim(), room.id);\r\n                setMessage(\"\");\r\n\r\n                messageListElement.current.scrollTop =\r\n                    messageListElement.current.scrollHeight;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// @ts-check\nimport React, { useEffect, useState } from \"react\";\nimport { getButtonLinks } from \"../api\";\n\nconst Navbar = () => {\n  /**\n   * @type {[{\n   *  heroku?: string;\n   *  google_cloud?: string;\n   *  vercel?: string;\n   *  github?: string;\n   *  }, React.Dispatch<any>]}\n   */\n  const [links, setLinks] = useState(null);\n  useEffect(() => {\n    getButtonLinks().then(setLinks);\n  }, []);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\n      <span className=\"navbar-brand\">Redis chat demo</span>\n      {links !== null ? (\n        <span className=\"navbar-text\">\n          {links.github && <GithubIcon link={links.github} />}\n        </span>\n      ) : (\n        <></>\n      )}\n    </nav>\n  );\n};\n\nconst GithubIcon = ({ link }) => (\n  <a\n    href={link}\n    // eslint-disable-next-line\n    target=\"_blank\"\n    title=\"Github\"\n  >\n    <svg\n      width={24}\n      height={24}\n      viewBox=\"0 0 64 64\"\n      aria-labelledby=\"title\"\n      aria-describedby=\"desc\"\n      role=\"img\"\n    >\n      <path\n        data-name=\"layer2\"\n        d=\"M32 0a32.021 32.021 0 0 0-10.1 62.4c1.6.3 2.2-.7 2.2-1.5v-6c-8.9 1.9-10.8-3.8-10.8-3.8-1.5-3.7-3.6-4.7-3.6-4.7-2.9-2 .2-1.9.2-1.9 3.2.2 4.9 3.3 4.9 3.3 2.9 4.9 7.5 3.5 9.3 2.7a6.93 6.93 0 0 1 2-4.3c-7.1-.8-14.6-3.6-14.6-15.8a12.27 12.27 0 0 1 3.3-8.6 11.965 11.965 0 0 1 .3-8.5s2.7-.9 8.8 3.3a30.873 30.873 0 0 1 8-1.1 30.292 30.292 0 0 1 8 1.1c6.1-4.1 8.8-3.3 8.8-3.3a11.965 11.965 0 0 1 .3 8.5 12.1 12.1 0 0 1 3.3 8.6c0 12.3-7.5 15-14.6 15.8a7.746 7.746 0 0 1 2.2 5.9v8.8c0 .9.6 1.8 2.2 1.5A32.021 32.021 0 0 0 32 0z\"\n        fill=\"#595F70\"\n      ></path>\n      <path\n        data-name=\"layer1\"\n        d=\"M12.1 45.9c-.1.2-.3.2-.5.1s-.4-.3-.3-.5.3-.2.6-.1c.2.2.3.4.2.5zm1.3 1.5a.589.589 0 0 1-.8-.8.631.631 0 0 1 .7.1.494.494 0 0 1 .1.7zm1.3 1.8a.585.585 0 0 1-.7-.3.6.6 0 0 1 0-.8.585.585 0 0 1 .7.3c.2.3.2.7 0 .8zm1.7 1.8c-.2.2-.5.1-.8-.1-.3-.3-.4-.6-.2-.8a.619.619 0 0 1 .8.1.554.554 0 0 1 .2.8zm2.4 1c-.1.3-.4.4-.8.3s-.6-.4-.5-.7.4-.4.8-.3c.3.2.6.5.5.7zm2.6.2c0 .3-.3.5-.7.5s-.7-.2-.7-.5.3-.5.7-.5c.4.1.7.3.7.5zm2.4-.4q0 .45-.6.6a.691.691 0 0 1-.8-.3q0-.45.6-.6c.5-.1.8.1.8.3z\"\n        fill=\"#595F70\"\n      ></path>\n    </svg>\n  </a>\n);\n\nexport default Navbar;\n","// @ts-check\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\nimport {AppContext} from \"./state\";\r\nimport {LoadingScreen} from \"./components/LoadingScreen\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {processChannelMessage, processSignIn} from \"./websockets/process\";\r\nimport useAppStateContext from './state';\r\nimport {initWebSocket} from './hooks';\r\n\r\nconst App = () => {\r\n    const [showLogin, setShowLogin] = useState(true)\r\n    const [state, dispatch] = useAppStateContext();\r\n\r\n    function onLogout() {\r\n        localStorage.clear();\r\n        setShowLogin(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initWebSocket({dispatch, state});\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={[state, dispatch]}>\r\n            <div\r\n                className={`full-height ${showLogin ? \"bg-light\" : \"\"}`}\r\n                style={{\r\n                    backgroundColor: !showLogin ? \"#495057\" : undefined,\r\n                }}\r\n            >\r\n                <Navbar/>\r\n                {showLogin ? (\r\n                    <Login onLogIn={processSignIn} setShowLogin={setShowLogin}/>\r\n                ) : (\r\n                    <Chat\r\n                        user={state.user}\r\n                        users={state.users}\r\n                        onMessageSend={processChannelMessage}\r\n                        onLogOut={onLogout}\r\n                    />\r\n                )}\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/style-overrides.css\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/font-face.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}